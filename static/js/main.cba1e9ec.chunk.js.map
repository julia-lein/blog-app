{"version":3,"sources":["Components/Post.js","Pages/Home.js","Pages/ShowAllPosts.js","Pages/Create.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Post","post","title","content","user","Date","timestamp","toLocaleString","Home","posts","JSON","parse","window","localStorage","getItem","useState","Math","floor","random","length","randomPost","setRandomPost","className","onClick","ShowAllPosts","map","i","reverse","CreatePost","username","setUsername","setTitle","setContent","history","useHistory","action","onSubmit","e","preventDefault","newPost","getTime","push","setItem","stringify","type","value","required","onChange","target","name","id","cols","rows","Header","to","exact","activeClassName","App","path","component","Create","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cba1e9ec.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Post({ post }) {\n    return(\n        <li>\n            <h3>Title: {post.title}</h3>\n            <p>{post.content}</p>\n            <p><i>Posted by: {post.user} - { new Date(post.timestamp).toLocaleString() }</i></p>\n        </li>\n    ) \n}\n\nexport default Post;\n","import React, { useState } from 'react';\nimport Post from '../Components/Post';\n\nconst Home = () =>\n{\n    const posts = JSON.parse(window.localStorage.getItem('posts')) || [];\n\n    const [ randomPost, setRandomPost ] = useState(posts[Math.floor(Math.random() * posts.length)]);\n\n    const handleRandomPost = () =>\n    {\n        setRandomPost(posts[Math.floor(Math.random() * posts.length)]);\n    }\n\n    return(\n        <div className=\"container\">\n            <h1>Welcome to my Blog!</h1>\n            <hr/>\n            <h2>Random post:</h2>\n            \n            {\n                posts.length > 0 ?\n                <Post post={ randomPost }></Post>\n                :\n                <p>No posts</p>\n            }\n            <hr/>\n            \n            <button onClick={ handleRandomPost }>New random post</button>\n\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport Post from '../Components/Post';\n\nconst ShowAllPosts = () =>\n{\n    let posts;\n    posts = JSON.parse(window.localStorage.getItem('posts'));\n\n    return(\n        <div className=\"container\">\n            <h1>Posts</h1>\n            <ul className=\"postsList\">\n            {\n                posts.map((post, i) =>\n                {\n                    return (\n                        <Post key={ i } post={ post }/>\n                    )\n                }).reverse()\n            }\n            </ul>\n        </div>\n    )\n}\n\nexport default ShowAllPosts;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst CreatePost = () =>\n{\n    const [ username, setUsername ] = useState(\"\");\n    const [ title, setTitle ] = useState(\"\");\n    const [ content, setContent ] = useState(\"\");\n\n    const history = useHistory();\n\n    const handleSubmit = (e) =>\n    {\n        e.preventDefault();\n\n        const newPost = { \n            user: `${username}`,\n            title: `${title}`,\n            content: `${content}`,\n            timestamp: new Date().getTime()\n        };\n\n        let posts = JSON.parse(window.localStorage.getItem('posts')) || [];\n\n        posts.push(newPost);\n\n        window.localStorage.setItem('posts', JSON.stringify(posts));\n\n        history.push(\"/posts\");\n    } \n   \n\n    return(\n        <div className=\"container\">\n            <h1>Create Post</h1>\n\n            <form action=\"\" onSubmit={ handleSubmit }>\n                <label>Username: <input type=\"text\" value={ username } required onChange={ (e) => setUsername(e.target.value) }/></label>\n                <label>Title: <input type=\"text\" value={ title } required onChange={ (e) => setTitle(e.target.value) }/></label>\n                <label>Content: <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\" value={ content } required onChange={ (e) => setContent(e.target.value) }></textarea></label>\n                <button type=\"submit\">Create a post</button>\n            </form>\n        </div>\n    )\n}\n\nexport default CreatePost;","import { NavLink } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <nav>\n              <NavLink to=\"/\" exact>Home</NavLink>\n              <NavLink to=\"/create\" activeClassName=\"active\">Create A Post</NavLink>\n              <NavLink to=\"/posts\" activeClassName=\"active\">Show Current Posts</NavLink>\n        </nav>\n    )\n}\n\nexport default Header;\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './Pages/Home';\nimport ShowAllPosts from './Pages/ShowAllPosts';\nimport CreatePost from './Pages/Create';\nimport Header from './Components/Header';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n       <BrowserRouter>\n\n            <Header />\n            <Home />\n            <Switch>\n              <Route exact path=\"/\" component={ Home } />\n              <Route exact path=\"/create\" component={ () => (<CreatePost />) } />\n              <Route path=\"/posts\" component={ () => (<ShowAllPosts />) }/>\n            </Switch>\n          </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}